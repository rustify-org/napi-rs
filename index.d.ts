/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

export declare function asyncFibTask(input: number): Promise<unknown>
export declare function asyncFib(input: number, signal: AbortSignal): Promise<unknown>
export const enum Kind {
  Dog = 'Dog',
  Cat = 'Cat'
}
export declare function coolFunction(kind: Kind): string
export declare function sum(a: number, b: number): number
export declare function hello(name: string): string
export declare function highOrderFunction(aArg: number, callback: (s: number)=>string): number
export declare function getEnv(env: string): string | null
export declare function sayA(s?: boolean | undefined | null): boolean
export declare function getSum(nums: Array<number>): number
export declare function sayHi(f: (msg: string)=>void): void
export declare function sayHi2(f: (msg: string)=>void, demo: string): void
export interface Pet {
  name: string
  kind: number
}
export declare function printPet(pet: Pet): void
export declare function callThreadsafeFunction(callback: (err: null | Error, result: number) => void): void
export declare function errorFunc(u: number): void
export declare class Animal {
  name: string
  age: number
  constructor(name: string, age: number)
  changeName(newName: string): void
}
export declare class Dog {
  name: string
  constructor(name: string)
}
export declare class Cat {
  name: string
  constructor(name: string)
  static create(name: string): Cat
  sayName(): string
  setName(newName: string): void
  getName(): string
}
